{"ast":null,"code":"var _jsxFileName = \"/Users/ikssss/Desktop/coding/inf_react/simpleTIL/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useMemo, useRef, useReducer } from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\"; // import OptimizeTest from \"./OptimizeTest\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT\":\n      {\n        return action.data;\n      }\n\n    case \"CREATE\":\n    case \"REMOVE\":\n    case \"EDIT\":\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  _s();\n\n  // const [data, setData] = useState([]);\n  const [data, dispatch] = useReducer(reducer, []);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then(res => res.json());\n    const initData = res.slice(0, 20).map(it => {\n      return {\n        author: it.email,\n        content: it.body,\n        score: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime() + 1,\n        id: dataId.current++\n      };\n    });\n    dispatch({\n      type: \"INIT\",\n      data: initData\n    });\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      getData();\n    }, 1500);\n  }, []);\n  const onCreate = useCallback((author, content, score) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      score,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData(data => [newItem, ...data]);\n  }, []);\n  const onRemove = useCallback(targetId => {\n    setData(data => data.filter(it => it.id !== targetId));\n  }, []);\n  const onEdit = useCallback((targetId, newContent) => {\n    setData(data => data.map(it => it.id === targetId ? { ...it,\n      content: newContent\n    } : it));\n  }, []);\n  const getDiaryAnalysis = useMemo(() => {\n    const goodCount = data.filter(it => it.score >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = goodCount / data.length * 100;\n    return {\n      goodCount,\n      badCount,\n      goodRatio\n    };\n  }, [data.length]);\n  const {\n    goodCount,\n    badCount,\n    goodRatio\n  } = getDiaryAnalysis;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC804\\uCCB4 \\uC77C\\uAE30 : \", data.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uC77C\\uAE30 \\uAC1C\\uC218 : \", goodCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uB098\\uC05C \\uC77C\\uAE30 \\uAC1C\\uC218 : \", badCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uC77C\\uAE30 \\uBE44\\uC728 : \", goodRatio, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEdit: onEdit,\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"F0Fyqg4AmrFvw2PizzKMxEoq+hM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useEffect","useMemo","useRef","useReducer","DiaryEditor","DiaryList","reducer","state","action","type","data","App","dispatch","dataId","getData","res","fetch","then","json","initData","slice","map","it","author","email","content","body","score","Math","floor","random","created_date","Date","getTime","id","current","setTimeout","onCreate","newItem","setData","onRemove","targetId","filter","onEdit","newContent","getDiaryAnalysis","goodCount","length","badCount","goodRatio"],"sources":["/Users/ikssss/Desktop/coding/inf_react/simpleTIL/src/App.js"],"sourcesContent":["import { useCallback, useEffect, useMemo, useRef, useReducer } from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\n// import OptimizeTest from \"./OptimizeTest\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT\": {\n      return action.data;\n    }\n    case \"CREATE\":\n    case \"REMOVE\":\n    case \"EDIT\":\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  // const [data, setData] = useState([]);\n  const [data, dispatch] = useReducer(reducer, []);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then((res) => res.json());\n\n    const initData = res.slice(0, 20).map((it) => {\n      return {\n        author: it.email,\n        content: it.body,\n        score: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime() + 1,\n        id: dataId.current++,\n      };\n    });\n\n    dispatch({ type: \"INIT\", data: initData });\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      getData();\n    }, 1500);\n  }, []);\n\n  const onCreate = useCallback((author, content, score) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      score,\n      created_date,\n      id: dataId.current,\n    };\n    dataId.current += 1;\n    setData((data) => [newItem, ...data]);\n  }, []);\n\n  const onRemove = useCallback((targetId) => {\n    setData((data) => data.filter((it) => it.id !== targetId));\n  }, []);\n\n  const onEdit = useCallback((targetId, newContent) => {\n    setData((data) => data.map((it) => (it.id === targetId ? { ...it, content: newContent } : it)));\n  }, []);\n\n  const getDiaryAnalysis = useMemo(() => {\n    const goodCount = data.filter((it) => it.score >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = (goodCount / data.length) * 100;\n    return { goodCount, badCount, goodRatio };\n  }, [data.length]);\n\n  const { goodCount, badCount, goodRatio } = getDiaryAnalysis;\n\n  return (\n    <div className=\"App\">\n      {/* <OptimizeTest /> */}\n      <DiaryEditor onCreate={onCreate} />\n      <div>전체 일기 : {data.length}</div>\n      <div>기분 좋은 일기 개수 : {goodCount}</div>\n      <div>기분 나쁜 일기 개수 : {badCount}</div>\n      <div>기분 좋은 일기 비율 : {goodRatio}%</div>\n      <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}