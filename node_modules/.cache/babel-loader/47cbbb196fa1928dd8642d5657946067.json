{"ast":null,"code":"var _jsxFileName = \"/Users/ikssss/Desktop/coding/inf_react/simpleTIL/src/OptimizeTest.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CounterA = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    count\n  } = _ref;\n  useEffect(() => {\n    console.log(`CounterA update - count: ${count}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\"); // prop인 obj가 객체(얕은 비교 - 주소에 의한 비교)\n\n\n_c2 = CounterA;\n\nconst CounterB = _ref2 => {\n  _s2();\n\n  let {\n    obj\n  } = _ref2;\n  useEffect(() => {\n    console.log(`CounterB update - obj: ${obj.count}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: obj.count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n}; // 얕은비교를 하지 않도록하여 최적화\n\n\n_s2(CounterB, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c3 = CounterB;\n\nconst areEqual = (preProps, nextProps) => {\n  if (preProps.obj.count === nextProps.obj.count) {\n    return true; // 이전 Props와 현재 Props가 같다 => 리렌더링 일으키지 않게 한다\n  }\n\n  return false; // 이전 Props와 현재 Props가 다르다 => 리렌더링 일으킨다\n};\n\nconst OptimizeTest = () => {\n  _s3();\n\n  const [count, setCount] = useState(1);\n  const [obj, setObj] = useState({\n    count: 1\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Counter A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterA, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count),\n        children: \"A button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Counter B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterB, {\n        obj: obj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setObj({\n          count: obj.count\n        }),\n        children: \"B button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(OptimizeTest, \"vZo1jgdNurzSr6DCpkoVuEAZevg=\");\n\n_c4 = OptimizeTest;\nexport default OptimizeTest;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CounterA$React.memo\");\n$RefreshReg$(_c2, \"CounterA\");\n$RefreshReg$(_c3, \"CounterB\");\n$RefreshReg$(_c4, \"OptimizeTest\");","map":{"version":3,"names":["React","useEffect","useState","CounterA","memo","count","console","log","CounterB","obj","areEqual","preProps","nextProps","OptimizeTest","setCount","setObj","padding"],"sources":["/Users/ikssss/Desktop/coding/inf_react/simpleTIL/src/OptimizeTest.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst CounterA = React.memo(({ count }) => {\n  useEffect(() => {\n    console.log(`CounterA update - count: ${count}`);\n  });\n  return <div>{count}</div>;\n});\n\n// prop인 obj가 객체(얕은 비교 - 주소에 의한 비교)\nconst CounterB = ({ obj }) => {\n  useEffect(() => {\n    console.log(`CounterB update - obj: ${obj.count}`);\n  });\n  return <div>{obj.count}</div>;\n};\n\n// 얕은비교를 하지 않도록하여 최적화\nconst areEqual = (preProps, nextProps) => {\n  if (preProps.obj.count === nextProps.obj.count) {\n    return true; // 이전 Props와 현재 Props가 같다 => 리렌더링 일으키지 않게 한다\n  }\n  return false; // 이전 Props와 현재 Props가 다르다 => 리렌더링 일으킨다\n};\n\nconst OptimizeTest = () => {\n  const [count, setCount] = useState(1);\n  const [obj, setObj] = useState({\n    count: 1,\n  });\n\n  return (\n    <div style={{ padding: 50 }}>\n      <div>\n        <h2>Counter A</h2>\n        <CounterA count={count} />\n        <button onClick={() => setCount(count)}>A button</button>\n      </div>\n\n      <div>\n        <h2>Counter B</h2>\n        <CounterB obj={obj} />\n        <button onClick={() => setObj({ count: obj.count })}>B button</button>\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizeTest;\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,QAAQ,iCAAGH,KAAK,CAACI,IAAN,SAAW,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EACzCJ,SAAS,CAAC,MAAM;IACdK,OAAO,CAACC,GAAR,CAAa,4BAA2BF,KAAM,EAA9C;EACD,CAFQ,CAAT;EAGA,oBAAO;IAAA,UAAMA;EAAN;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CALgB,kCAAH,iCAAd,C,CAOA;;;MAPMF,Q;;AAQN,MAAMK,QAAQ,GAAG,SAAa;EAAA;;EAAA,IAAZ;IAAEC;EAAF,CAAY;EAC5BR,SAAS,CAAC,MAAM;IACdK,OAAO,CAACC,GAAR,CAAa,0BAAyBE,GAAG,CAACJ,KAAM,EAAhD;EACD,CAFQ,CAAT;EAGA,oBAAO;IAAA,UAAMI,GAAG,CAACJ;EAAV;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CALD,C,CAOA;;;IAPMG,Q;;MAAAA,Q;;AAQN,MAAME,QAAQ,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;EACxC,IAAID,QAAQ,CAACF,GAAT,CAAaJ,KAAb,KAAuBO,SAAS,CAACH,GAAV,CAAcJ,KAAzC,EAAgD;IAC9C,OAAO,IAAP,CAD8C,CACjC;EACd;;EACD,OAAO,KAAP,CAJwC,CAI1B;AACf,CALD;;AAOA,MAAMQ,YAAY,GAAG,MAAM;EAAA;;EACzB,MAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACO,GAAD,EAAMM,MAAN,IAAgBb,QAAQ,CAAC;IAC7BG,KAAK,EAAE;EADsB,CAAD,CAA9B;EAIA,oBACE;IAAK,KAAK,EAAE;MAAEW,OAAO,EAAE;IAAX,CAAZ;IAAA,wBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,QAAD;QAAU,KAAK,EAAEX;MAAjB;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAE,MAAMS,QAAQ,CAACT,KAAD,CAA/B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAOE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,QAAD;QAAU,GAAG,EAAEI;MAAf;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAE,MAAMM,MAAM,CAAC;UAAEV,KAAK,EAAEI,GAAG,CAACJ;QAAb,CAAD,CAA7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CArBD;;IAAMQ,Y;;MAAAA,Y;AAuBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}