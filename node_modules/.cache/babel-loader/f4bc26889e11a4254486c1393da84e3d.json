{"ast":null,"code":"var _jsxFileName = \"/Users/ikssss/Desktop/coding/inf_react/simpleTIL/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\"; // https://jsonplaceholder.typicode.com/comments\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then(res => res.json);\n    console.log(res);\n  };\n\n  const onCreate = (author, content, score) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      score,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]); // setting that the latest TIL places first(top)\n  };\n\n  const onRemove = targetId => {\n    console.log(`${targetId}가 삭제되었습니다.`);\n    const newDiaryList = data.filter(it => it.id !== targetId);\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(data.map(it => it.id === targetId ? { ...it,\n      content: newContent\n    } : it));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      diaryList: data,\n      onRemove: onRemove,\n      onEdit: onEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PSh4R9M9XXzghkCT8iIKMDh9kfM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","useState","DiaryEditor","DiaryList","App","data","setData","dataId","getData","res","fetch","then","json","console","log","onCreate","author","content","score","created_date","Date","getTime","newItem","id","current","onRemove","targetId","newDiaryList","filter","it","onEdit","newContent","map"],"sources":["/Users/ikssss/Desktop/coding/inf_react/simpleTIL/src/App.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\n\n// https://jsonplaceholder.typicode.com/comments\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then((res) => res.json);\n    console.log(res);\n  };\n\n  const onCreate = (author, content, score) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      score,\n      created_date,\n      id: dataId.current,\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]); // setting that the latest TIL places first(top)\n  };\n\n  const onRemove = (targetId) => {\n    console.log(`${targetId}가 삭제되었습니다.`);\n    const newDiaryList = data.filter((it) => it.id !== targetId);\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(data.map((it) => (it.id === targetId ? { ...it, content: newContent } : it)));\n  };\n\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate} />\n      <DiaryList diaryList={data} onRemove={onRemove} onEdit={onEdit} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAMM,MAAM,GAAGP,MAAM,CAAC,CAAD,CAArB;;EAEA,MAAMQ,OAAO,GAAG,YAAY;IAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+CAAD,CAAL,CAAuDC,IAAvD,CAA6DF,GAAD,IAASA,GAAG,CAACG,IAAzE,CAAlB;IACAC,OAAO,CAACC,GAAR,CAAYL,GAAZ;EACD,CAHD;;EAKA,MAAMM,QAAQ,GAAG,CAACC,MAAD,EAASC,OAAT,EAAkBC,KAAlB,KAA4B;IAC3C,MAAMC,YAAY,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAArB;IACA,MAAMC,OAAO,GAAG;MACdN,MADc;MAEdC,OAFc;MAGdC,KAHc;MAIdC,YAJc;MAKdI,EAAE,EAAEhB,MAAM,CAACiB;IALG,CAAhB;IAOAjB,MAAM,CAACiB,OAAP,IAAkB,CAAlB;IACAlB,OAAO,CAAC,CAACgB,OAAD,EAAU,GAAGjB,IAAb,CAAD,CAAP,CAV2C,CAUd;EAC9B,CAXD;;EAaA,MAAMoB,QAAQ,GAAIC,QAAD,IAAc;IAC7Bb,OAAO,CAACC,GAAR,CAAa,GAAEY,QAAS,YAAxB;IACA,MAAMC,YAAY,GAAGtB,IAAI,CAACuB,MAAL,CAAaC,EAAD,IAAQA,EAAE,CAACN,EAAH,KAAUG,QAA9B,CAArB;IACApB,OAAO,CAACqB,YAAD,CAAP;EACD,CAJD;;EAMA,MAAMG,MAAM,GAAG,CAACJ,QAAD,EAAWK,UAAX,KAA0B;IACvCzB,OAAO,CAACD,IAAI,CAAC2B,GAAL,CAAUH,EAAD,IAASA,EAAE,CAACN,EAAH,KAAUG,QAAV,GAAqB,EAAE,GAAGG,EAAL;MAASZ,OAAO,EAAEc;IAAlB,CAArB,GAAsDF,EAAxE,CAAD,CAAP;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,WAAD;MAAa,QAAQ,EAAEd;IAAvB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAW,SAAS,EAAEV,IAAtB;MAA4B,QAAQ,EAAEoB,QAAtC;MAAgD,MAAM,EAAEK;IAAxD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAtCQ1B,G;;KAAAA,G;AAwCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}