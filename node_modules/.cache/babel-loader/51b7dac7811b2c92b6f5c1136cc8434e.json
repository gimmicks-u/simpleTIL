{"ast":null,"code":"// import { useEffect, useRef, useState } from \"react\";\n// import \"./App.css\";\n// import DiaryEditor from \"./DiaryEditor\";\n// import DiaryList from \"./DiaryList\";\n// const App = () => {\n//   const [data, setData] = useState([]);\n//   const dataId = useRef(0);\n//   const getData = async () => {\n//     const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then((res) => res.json());\n//     const initData = res.slice(0, 20).map((it) => {\n//       return {\n//         author: it.email,\n//         content: it.body,\n//         emotion: Math.floor(Math.random() * 5) + 1,\n//         created_date: new Date().getTime() + 1,\n//         id: dataId.current++,\n//       };\n//     });\n//     setData(initData);\n//   };\n//   useEffect(() => {\n//     setTimeout(() => {\n//       getData();\n//     }, 1500);\n//   }, []);\n//   const onCreate = (author, content, emotion) => {\n//     const created_date = new Date().getTime();\n//     const newItem = {\n//       author,\n//       content,\n//       emotion,\n//       created_date,\n//       id: dataId.current,\n//     };\n//     dataId.current += 1;\n//     setData([newItem, ...data]);\n//   };\n//   const onRemove = (targetId) => {\n//     const newDiaryList = data.filter((it) => it.id !== targetId);\n//     setData(newDiaryList);\n//   };\n//   const onEdit = (targetId, newContent) => {\n//     setData(data.map((it) => (it.id === targetId ? { ...it, content: newContent } : it)));\n//   };\n//   return (\n//     <div className=\"App\">\n//       <DiaryEditor onCreate={onCreate} />\n//       <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data} />\n//     </div>\n//   );\n// };\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/ikssss/Desktop/coding/inf_react/simpleTIL/src/App.js"],"sourcesContent":["// import { useEffect, useRef, useState } from \"react\";\n// import \"./App.css\";\n// import DiaryEditor from \"./DiaryEditor\";\n// import DiaryList from \"./DiaryList\";\n\n// const App = () => {\n//   const [data, setData] = useState([]);\n//   const dataId = useRef(0);\n\n//   const getData = async () => {\n//     const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then((res) => res.json());\n\n//     const initData = res.slice(0, 20).map((it) => {\n//       return {\n//         author: it.email,\n//         content: it.body,\n//         emotion: Math.floor(Math.random() * 5) + 1,\n//         created_date: new Date().getTime() + 1,\n//         id: dataId.current++,\n//       };\n//     });\n\n//     setData(initData);\n//   };\n\n//   useEffect(() => {\n//     setTimeout(() => {\n//       getData();\n//     }, 1500);\n//   }, []);\n\n//   const onCreate = (author, content, emotion) => {\n//     const created_date = new Date().getTime();\n//     const newItem = {\n//       author,\n//       content,\n//       emotion,\n//       created_date,\n//       id: dataId.current,\n//     };\n//     dataId.current += 1;\n//     setData([newItem, ...data]);\n//   };\n\n//   const onRemove = (targetId) => {\n//     const newDiaryList = data.filter((it) => it.id !== targetId);\n//     setData(newDiaryList);\n//   };\n\n//   const onEdit = (targetId, newContent) => {\n//     setData(data.map((it) => (it.id === targetId ? { ...it, content: newContent } : it)));\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <DiaryEditor onCreate={onCreate} />\n//       <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data} />\n//     </div>\n//   );\n// };\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}